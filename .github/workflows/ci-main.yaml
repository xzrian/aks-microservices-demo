# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: "Continuous Integration - Main/Release"
on:
  push:
    # run on pushes to main or release/*
    branches:
      - main
      - release/*
    paths-ignore:
      - "**/README.md"
      - "kustomize/**"
      - ".github/workflows/kustomize-build-ci.yaml"
      - "terraform/**"
      - ".github/workflows/terraform-validate-ci.yaml"
jobs:
  code-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v3
        env:
          DOTNET_INSTALL_DIR: "./.dotnet"
        with:
          dotnet-version: "7.0"
      - uses: actions/setup-go@v3
        with:
          go-version: "1.19"
      - name: Go Unit Tests
        timeout-minutes: 10
        run: |
          for SERVICE in "shippingservice" "productcatalogservice"; do
            echo "testing $SERVICE..."
            pushd src/$SERVICE
            go test
            popd
          done
      - name: C# Unit Tests
        timeout-minutes: 10
        run: |
          dotnet test src/cartservice/
  deployment-tests:
    runs-on: ubuntu-latest
    needs: code-tests
    strategy:
      matrix:
        profile: ["local-code"]
      fail-fast: true
    steps:
      - uses: actions/checkout@v3
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - uses: yokawasa/action-setup-kube-tools@v0.9.2
      - name: Build + Deploy PR images to AKS
        run: |
          PR_NUMBER=$(echo $GITHUB_SHA | awk 'BEGIN { FS = "/" } ; { print $3 }')
          NAMESPACE="pr${PR_NUMBER}"
          az aks get-credentials --name $PR_CLUSTER --resource-group $RESOURCE_GROUP
          cat <<EOF | kubectl apply -f -
          apiVersion: v1
          kind: Namespace
          metadata:
            name: $NAMESPACE
          EOF
          echo Deploying application
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
          RESOURCE_GROUP: "K8s-RG"
          PROJECT_ID: "online-boutique-ci"
          PR_CLUSTER: "asdw1e"
          REGION: "eat asia"
      - uses: docker/login-action@v1
        with:
          registry: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - uses: hiberbee/github-action-skaffold@1.24.0
        with:
          command: run
          repository: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          tag: $GITHUB_SHA
          namespace: prod
          profile: network-policies
      - name: Wait For Pods
        timeout-minutes: 20
        run: |
          set -x
          kubectl config set-context --current --namespace=$NAMESPACE
          kubectl wait --for=condition=available --timeout=1000s deployment/redis-cart
          kubectl wait --for=condition=available --timeout=1000s deployment/adservice
          kubectl wait --for=condition=available --timeout=1000s deployment/cartservice
          kubectl wait --for=condition=available --timeout=1000s deployment/checkoutservice
          kubectl wait --for=condition=available --timeout=1000s deployment/currencyservice
          kubectl wait --for=condition=available --timeout=1000s deployment/emailservice
          kubectl wait --for=condition=available --timeout=1000s deployment/frontend
          kubectl wait --for=condition=available --timeout=1000s deployment/loadgenerator
          kubectl wait --for=condition=available --timeout=1000s deployment/paymentservice
          kubectl wait --for=condition=available --timeout=1000s deployment/productcatalogservice
          kubectl wait --for=condition=available --timeout=1000s deployment/recommendationservice
          kubectl wait --for=condition=available --timeout=1000s deployment/shippingservice
      - name: Smoke Test
        timeout-minutes: 5
        run: |
          set -x
          # start fresh loadgenerator pod
          kubectl delete pod -l app=loadgenerator
          # wait for requests to come in
          REQUEST_COUNT="0"
          while [[ "$REQUEST_COUNT"  -lt "50"  ]]; do
              sleep 5
              REQUEST_COUNT=$(kubectl logs -l app=loadgenerator | grep Aggregated | awk '{print $2}')
          done
          # ensure there are no errors hitting endpoints
          ERROR_COUNT=$(kubectl logs -l app=loadgenerator | grep Aggregated | awk '{print $3}' | sed "s/[(][^)]*[)]//g")
          if [[ "$ERROR_COUNT" -gt "0" ]]; then
            exit 1
          fi
